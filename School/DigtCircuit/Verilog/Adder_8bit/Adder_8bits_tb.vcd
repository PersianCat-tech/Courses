$date
	Fri Apr 26 00:09:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Adder_8bits_tb $end
$var wire 8 ! Sum [7:0] $end
$var wire 1 " CarryOut $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$scope module DUT $end
$var wire 8 % A [7:0] $end
$var wire 8 & B [7:0] $end
$var wire 8 ' Sum [7:0] $end
$var wire 8 ( c [7:0] $end
$var wire 1 " CarryOut $end
$var wire 8 ) Carry [7:0] $end
$scope module FA0 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 , Cin $end
$var wire 1 - Cout $end
$var wire 1 . Sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 Cin $end
$var wire 1 2 Cout $end
$var wire 1 3 Sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 4 A $end
$var wire 1 5 B $end
$var wire 1 6 Cin $end
$var wire 1 7 Cout $end
$var wire 1 8 Sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 ; Cin $end
$var wire 1 < Cout $end
$var wire 1 = Sum $end
$upscope $end
$scope module FA4 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 @ Cin $end
$var wire 1 A Cout $end
$var wire 1 B Sum $end
$upscope $end
$scope module FA5 $end
$var wire 1 C A $end
$var wire 1 D B $end
$var wire 1 E Cin $end
$var wire 1 F Cout $end
$var wire 1 G Sum $end
$upscope $end
$scope module FA6 $end
$var wire 1 H A $end
$var wire 1 I B $end
$var wire 1 J Cin $end
$var wire 1 K Cout $end
$var wire 1 L Sum $end
$upscope $end
$scope module FA7 $end
$var wire 1 M A $end
$var wire 1 N B $end
$var wire 1 O Cin $end
$var wire 1 P Cout $end
$var wire 1 Q Sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0Q
1P
1O
0N
1M
0L
1K
0J
1I
1H
1G
0F
0E
1D
0C
1B
0A
1@
0?
0>
0=
1<
1;
0:
19
08
17
16
15
04
03
12
01
10
1/
1.
0-
0,
1+
0*
b11001110 )
b110001 (
b110001 '
b1100111 &
b11001010 %
b1100111 $
b11001010 #
1"
b110001 !
$end
#320
